import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";
import { ArrowLeft, Trash, UserX, Users } from 'lucide-react';

const ManageGroup = (props) => {
    const dispatch = useDispatch();
    const user = useSelector((state) => state.auth.userInfo);
    const navigate = useNavigate();
    const receiver = props.receiver

    const permissions = [
        "Thay ƒë·ªïi t√™n & ·∫£nh ƒë·∫°i di·ªán c·ªßa nh√≥m",
        "Ghim tin nh·∫Øn, ghi ch√∫, b√¨nh ch·ªçn l√™n ƒë·∫ßu h·ªôi tho·∫°i",
        "T·∫°o m·ªõi ghi ch√∫, nh·∫Øc h·∫πn",
        "T·∫°o m·ªõi b√¨nh ch·ªçn",
        "G·ª≠i tin nh·∫Øn",
    ];
    const [checkedStates, setCheckedStates] = useState(Array(permissions.length).fill(true));

    const handleCheckboxChange = (index) => {
        const updated = [...checkedStates];
        updated[index] = !updated[index];
        setCheckedStates(updated);
    };

    useEffect(() => {
        if (receiver?.permission) {
            const updatedStates = permissions.map((_, index) =>
                receiver.permission.includes(index + 1)
            );
            setCheckedStates(updatedStates);
        }
    }, [receiver]);

    return (
        <>
            {/* Header */}
            <div className="border-bottom header-right-sidebar d-flex align-items-center justify-content-between">
                <button
                    className="btn btn-light btn-sm rounded-circle"
                    onClick={() => props.handleManageGroup()}
                >
                    <ArrowLeft size={16} />
                </button>
                <h6 className="mb-0 flex-grow-1 text-center">Qu·∫£n l√Ω nh√≥m</h6>
            </div>

            <div className="container py-3">
                {/* Cho ph√©p c√°c th√†nh vi√™n */}
                <div className="card mb-3">
                    <div className="card-header">
                        <h5 className="mb-0">Cho ph√©p c√°c th√†nh vi√™n trong nh√≥m:</h5>
                    </div>
                    <div className="card-body">
                        {permissions.map((text, idx) => (
                            <div className="form-check mb-2" key={idx}>
                                <input
                                    className="form-check-input"
                                    type="checkbox"
                                    checked={checkedStates[idx]}
                                    onChange={() => handleCheckboxChange(idx)}
                                />
                                <label className="form-check-label">{text}</label>
                            </div>
                        ))}
                    </div>
                </div>

                {/* C√†i ƒë·∫∑t nh√≥m */}
                <div className="card mb-3">
                    <div className="card-header">
                        <h5 className="mb-0">C√†i ƒë·∫∑t nh√≥m</h5>
                    </div>
                    <div className="card-body">
                        {[
                            "Ch·∫ø ƒë·ªô ph√™ duy·ªát th√†nh vi√™n m·ªõi",
                            "ƒê√°nh d·∫•u tin nh·∫Øn t·ª´ tr∆∞·ªüng/ph√≥ nh√≥m",
                            "Cho ph√©p th√†nh vi√™n m·ªõi ƒë·ªçc tin nh·∫Øn g·∫ßn nh·∫•t",
                            "Cho ph√©p d√πng link tham gia nh√≥m",
                        ].map((label, idx) => (
                            <div className="d-flex justify-content-between align-items-center mb-3" key={idx}>
                                <span>{label}</span>
                                <div className="form-check form-switch m-0">
                                    <input className="form-check-input" type="checkbox" defaultChecked={idx !== 0} readOnly={idx !== 0} />
                                </div>
                            </div>
                        ))}

                        {/* Link tham gia */}
                        <div className="input-group mt-3">
                            <input
                                type="text"
                                className="form-control"
                                value="zalo.me/g/fmrwto598"
                                readOnly
                            />
                            <button className="btn btn-outline-secondary" title="Copy">
                                üìã
                            </button>
                            <button className="btn btn-outline-secondary" title="Chia s·∫ª">
                                üîó
                            </button>
                            <button className="btn btn-outline-secondary" title="C·∫≠p nh·∫≠t">
                                üîÑ
                            </button>
                        </div>
                    </div>
                </div>

                {/* H√†nh ƒë·ªông kh√°c */}
                <div className="card mb-3">
                    <div className="card-header">
                        <h5 className="mb-0">H√†nh ƒë·ªông</h5>
                    </div>
                    <div className="card-body">
                        <button className="btn btn-outline-danger w-100 mb-2 d-flex align-items-center justify-content-center gap-2">
                            <UserX size={18} /> Ch·∫∑n kh·ªèi nh√≥m
                        </button>
                        <button className="btn btn-outline-secondary w-100 d-flex align-items-center justify-content-center gap-2">
                            <Users size={18} /> Tr∆∞·ªüng & ph√≥ nh√≥m
                        </button>
                    </div>
                </div>

                {/* N√∫t gi·∫£i t√°n */}
                <div className="text-center">
                    <button className="btn btn-danger">
                        <Trash size={16} className="me-2" />
                        Gi·∫£i t√°n nh√≥m
                    </button>
                </div>
            </div>
        </>
    );
};

export default ManageGroup;
